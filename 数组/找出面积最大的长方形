const heights = [1,8,6,2,5,4,8,3,7]
/*
解1， 性能太差
let maxArea = function(heights) {
	let max = 0
	for (let i = 0; i < height.length; i++) {
		let h = height[i]
		for (let j = i; j < height.length; j++) {
			let w = j - i,
			a = Math.min(h, height[j])
			max = Math.max(w * a, max)
			// console.log({w, h, r : w * a})
		}
	}
	return max
};
maxArea(heights)
*/

/*
  	头尾指针, 相遇时计算完毕
	宽度: j - i
	Math.max: 保留最大面积
	高度: height[指针], 谁短谁就向内移动

*/

let maxArea = function(heights) {
	let head = 0, tail = heights.length - 1, res = 0;
	while(head < tail) {
		res = heights[head] < heights[tail] ?
			Math.max(res, (tail - head) * heights[head ++]) :
			Math.max(res, (tail - head) * heights[tail --]) 
	}
	return res
};
maxArea(heights)